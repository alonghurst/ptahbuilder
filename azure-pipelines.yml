trigger:
  paths:
    exclude:
      - README.md
      - .gitignore

pr: none

pool:
  vmImage: "ubuntu-latest"

continueOnError: false

variables:
  projects: "**/*.csproj"
  projectToPublish: "src/**/*.csproj"
  buildConfiguration: "Release"
  packageVersionRelease: "$(Build.BuildNumber)"
  packageVersionPreRelease: "$(Build.BuildNumber)-alpha"

steps:
  - task: DotNetCoreCLI@2
    displayName: "Restore all projects"
    inputs:
      command: "restore"
      projects: "$(projects)"

  - task: DotNetCoreCLI@2
    displayName: "Build all projects"
    inputs:
      command: "build"
      projects: "$(projects)"
      arguments: "--configuration $(buildConfiguration) --no-restore"

  - task: CmdLine@2
    displayName: "Run builder"
    condition: eq(false, true)
    inputs:
      script: "dotnet run -c '$(buildConfiguration)' -- ."
      workingDirectory: "$(System.DefaultWorkingDirectory)/tests/PtahBuilder.Tests.TestBuilder/"
      failOnStderr: true

  - task: DotNetCoreCLI@2
    displayName: "Publish Dotnet"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: "publish"
      publishWebProjects: false
      zipAfterPublish: false
      projects: |
        $(projectToPublish)
      arguments: "--configuration $(buildConfiguration) --no-restore --output $(stagingDirectory)"

  - task: DotNetCoreCLI@2
    displayName: "Pack pre-release"
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: "pack"
      packagesToPack: |
        $(projectToPublish)
      packDirectory: "$(Build.ArtifactStagingDirectory)"
      nobuild: true
      versioningScheme: "byEnvVar"
      versionEnvVar: "packageVersionPreRelease"

  - task: DotNetCoreCLI@2
    displayName: "Pack release"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: "pack"
      packagesToPack: |
        $(projectToPublish)
      packDirectory: "$(Build.ArtifactStagingDirectory)"
      nobuild: true
      versioningScheme: "byEnvVar"
      versionEnvVar: "packageVersionRelease"

  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "PtahBuilder-drop"
      publishLocation: "Container"
